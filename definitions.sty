
%%%%%%%% UNICODE SUPPORT %%%%%%%%

\usepackage{ucs}
\usepackage{pdffonts}
\usepackage{color}
\newcommand{\textalpha}{{\usefont{OML}{hlcm}{m}{n} \ensuremath{\alpha}}}
\renewcommand{\textbeta}{{\usefont{OML}{hlcm}{m}{n} \ensuremath{\beta}}}
\newcommand{\textgamma}{{\usefont{OML}{hlcm}{m}{n} \ensuremath{\gamma}}}
\renewcommand{\textmu}{{\usefont{OML}{hlcm}{m}{n} \ensuremath{\mu}}}

%%%%%%%% HEADERS AND FOOTERS %%%%%%%%

\def\chtitle{}
\def\chnum{}
\usepackage{fancyheadings}
\pagestyle{fancy}
\setlength{\headrulewidth}{0.5pt}
\setlength{\footrulewidth}{0.5pt}
\lhead{\small\it Introduction to Natural Language Processing (DRAFT)}
\chead{}
\rhead{\small\it \chnum. \chtitle}
\lfoot{\small\it Bird, Klein \& Loper}
\cfoot{\chnum-\thepage}
\rfoot{\small\it \today}

%%%%%%%% CUSTOM INLINE ROLES %%%%%%%%

% Placeholder -- to be replaced by some actual value in a program
\newcommand{\docutilsroleplaceholder}[1]{\texttt{\textit{#1}}}
% Linguistic example - cited form in running text
\newcommand{\docutilsroleexample}[1]{\textit{#1}}
% Emphasized text
\newcommand{\docutilsroleemphasis}[1]{\emph{#1}}
% Defined term - first of canonical use of technical term
\newcommand{\docutilsroleterm}[1]{\textbf{#1}}
% Gramatical category - e.g. NP and verb as technical terms
\newcommand{\docutilsrolecategory}[1]{\textsf{#1}}
% Math symbols
\newcommand{\docutilsrolemath}[1]{${#1}$}
% Text in math env
\newcommand{\docutilsrolemathit}[1]{$\mathit{#1}$}

\newcommand{\docutilsrolefeature}[1]{\textsc{#1}}
\newcommand{\docutilsrolefval}[1]{\textit{#1}}
\newcommand{\docutilsroleNone}[1]{#1}

%%%%%%%% PYTHON SOURCE CODE MARKUP %%%%%%%%

% Note -- there is no bold tt font, so currently most of these commands
% don't really do anything. :-/

\definecolor{py@keywordcolour}{rgb}{1,0.45882,0}
\definecolor{py@stringcolour}{rgb}{0,0.666666,0}
\definecolor{py@commentcolour}{rgb}{1,0,0}
\definecolor{py@ps1colour}{rgb}{0.60784,0,0}
\definecolor{py@ps2colour}{rgb}{0.60784,0,1}
\definecolor{py@inputcolour}{rgb}{0,0,0}
\definecolor{py@outputcolour}{rgb}{0,0,1}
\definecolor{py@exceptcolour}{rgb}{1,0,0}
\definecolor{py@builtincolour}{rgb}{0.58039,0,0.58039}
\definecolor{py@identifiercolour}{rgb}{0,0,0}
\definecolor{py@linenumcolour}{rgb}{0.4,0.4,0.4}
\definecolor{py@inputcolour}{rgb}{0,0,0}

% Prompt
\renewcommand{\pysrcprompt}[1]{\textcolor{py@ps1colour}{\small\textbf{#1}}}
\renewcommand{\pysrcmore}[1]{\textcolor{py@ps2colour}{\small\textbf{#1}}}
% Source code
\renewcommand{\pysrckeyword}[1]{\textcolor{py@keywordcolour}{\small\textbf{#1}}}
\renewcommand{\pysrcbuiltin}[1]{\textcolor{py@builtincolour}{\small\textbf{#1}}}
\renewcommand{\pysrcstring}[1]{\textcolor{py@stringcolour}{\small\textbf{#1}}}
\renewcommand{\pysrcother}[1]{\small\textbf{#1}}
% Comments
\renewcommand{\pysrccomment}[1]{\textcolor{py@commentcolour}{\small\textbf{#1}}}
% Output
\renewcommand{\pysrcoutput}[1]{\textcolor{py@outputcolour}{\small\textbf{#1}}}
% Exceptions
\renewcommand{\pysrcexcept}[1]{\textcolor{py@exceptcolour}{\small\textbf{#1}}}

%%%%%%%% HYPHENATION CONTROL %%%%%%%%

\pretolerance 250
\tolerance 500
% \hyphenpenalty 250
\hyphenpenalty 200
\exhyphenpenalty 100
\doublehyphendemerits 7500
\finalhyphendemerits 7500
\brokenpenalty 10000
\lefthyphenmin 3
\righthyphenmin 3
\widowpenalty 10000
\clubpenalty 10000
\displaywidowpenalty 10000
\looseness 1
