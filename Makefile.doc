# Tutorial Makefile
#
# Copyright (C) 2001-2008 University of Pennsylvania
# Author: Steven Bird <sb@csse.unimelb.edu.au>
#         Edward Loper <edloper@gradient.cis.upenn.edu>
# URL: <http://nltk.sf.net>
# For license information, see LICENSE.TXT

PAPER_SIZE = a4

CHAPTERS = preface.txt introduction.txt programming.txt words.txt tag.txt chunk.txt structured-programming.txt parse.txt advanced-parsing.txt featgram.txt applied-programming.txt data.txt semantics.txt data-intensive.txt projects.txt nlp-python.txt nltk-modules.txt cheat-sheet.txt term_index.txt

REF_EXTENSION = .ref

PDF := $(CHAPTERS:.txt=.pdf)
HTML := $(CHAPTERS:.txt=.html)
XML := $(CHAPTERS:.txt=.xml)
ERRS := $(CHAPTERS:.txt=.errs)
REF := $(CHAPTERS:.txt=$(REF_EXTENSION))
PY := $(CHAPTERS:.txt=.py)
TEX := $(CHAPTERS:.txt=.tex)

BIBTEX_FILE = ../refs.bib

PYTHON = python
PDFLATEX = TEXINPUTS=".:..:ucs:" pdflatex -halt-on-error
EXAMPLES = ../examples.py
RST = ../rst.py
RST2REF = $(RST) --ref
RST2HTML = $(RST) --html
RST2DOCBOOK = $(RST) --docbook
RST2LATEX = $(RST) --latex --$(PAPER_SIZE)
DOCTEST = PYTHONPATH=../.. $(PYTHON) ../../nltk/test/doctest_driver.py
BIBTEX = bibtex -terse

# <http://www.spinellis.gr/sw/textproc/bib2xhtml/>
BIB2XHTML = bib2xhtml -s named

WEB = $(USER)@shell.sourceforge.net:/home/groups/n/nl/nltk/htdocs
BETA = $(WEB)/beta
RSYNC_OPTS = -arvz -e ssh --relative --cvs-exclude

LATEX_STYLESHEET_PATH = ../definitions.sty

.SUFFIXES: .txt .html .pdf .errs .py

help: usage
usage:
	@echo "Usage:"
	@echo "    make all         -- Build HTML & PDF output"
	@echo "    make html        -- Build HTML output"
	@echo "    make pdf         -- Build PDF output"
	@echo "    make xml         -- Build XML output"
	@echo "    make errs        -- Run doctest to generate .errs files"
	@echo "    make clean       -- Remove all built files"

all: html pdf examples book clean_up
html: $(HTML) bibliography.html 
pdf: $(PDF)
xml: preface.xml
book: book.html book.bbl book.pdf
examples: $(PY)
errs: $(ERRS)
	ls -l $(ERRS)

clean:	clean_up
	rm -f $(PDF) $(HTML) $(ERRS) $(REF) $(PY) $(TEX)
	rm -f book.pdf book.html book.tex bibliography.html
	rm -rf tree_images

clean_up:
	rm -f *.log *.aux *.out *.errs *~ *.bbl *.idx *.ilg *.ind *.toc *.blg

.PRECIOUS: $(REF)

%$(REF_EXTENSION): %.txt
	$(RST2REF) $<

%.html: %.txt $(REF) revision.txt
	$(RST2HTML) $(REF) $< 

%.xml: %.txt $(RST) #$(REF) revision.txt
	$(RST2DOCBOOK) $(REF) $< 

%.tex: %.txt $(REF) revision.txt
	$(RST2LATEX) $(REF) $< 

revision.txt: $(CHAPTERS)
	echo "This document is" > revision.txt
	svn info | grep Revision >> revision.txt
	date >> revision.txt

%.bbl: %.tex $(BIBTEX_FILE)
	rm -f $*.bbl
	@echo "pdflatex $< -> $*.pdf (for bibtex)"
	@(true | $(PDFLATEX) $< >/dev/null) || \
                 (cat $*.log && rm -f $*.pdf && false)
	@echo $(BIBTEX) $*
	@(true | $(BIBTEX) $* || (rm -f $*.pdf $*.bbl && false))

bibliography.html: $(BIBTEX_FILE) bib_template.html
	cp bib_template.html $@
	$(BIB2XHTML) $< $@

book.html: book.txt $(CHAPTERS) part1.txt part2.txt part3.txt
	$(RST2HTML) $<

book.tex: book.txt $(CHAPTERS) part1.txt part2.txt part3.txt
	$(RST2LATEX) --documentclass=book --bibliography $<

# This fairly complex target here will cause pdflatex to only generate
# output if it fails; and to clean up after itself if it fails.  Also,
# it will only run a second pass if it detects that it's necessary (by
# scanning the log file for a warning message).
%.pdf: %.tex
	rm -f $*.ind
	@echo "pdflatex $< -> $*.pdf (first pass)"
	@(true | $(PDFLATEX) $< >/dev/null) || \
                 (cat $*.log && rm -f $*.pdf && false)
	@if [ "`grep -i 'Warning.*Rerun' $*.log`" ]; \
	    then \
	        echo "pdflatex $< -> $*.pdf (second pass)";\
	        (true | $(PDFLATEX) $< >/dev/null) || \
                       (cat $*.log && rm -f $*.pdf && false);\
	    fi
	@(if [ -e $*.idx ]; \
	    then \
	        echo "makeindex $*.idx"; makeindex $*.idx; \
	    fi)
	@echo "pdflatex $< -> $*.pdf (last pass)"
	@(true | $(PDFLATEX) $< >/dev/null) || \
                 (cat $*.log && rm -f $*.pdf && false)
	@echo "cleaning up latex temp files..."
	rm -f $*.log $*.aux $*.out $*.errs $*.bbl 
	rm -f $*.idx $*.ilg $*.ind $*.toc $*.blg

book.pdf: book.bbl book.tex

.txt.errs:
	$(DOCTEST) $< --ellipsis --normalize_whitespace --udiff &> $@

rsync-en:
	rsync $(RSYNC_OPTS) . $(WEB)/doc/en/

rsync-en-beta:
	rsync $(RSYNC_OPTS) . $(BETA)/doc/en/

.txt.py:
	$(PYTHON) $(EXAMPLES) $< > $@
