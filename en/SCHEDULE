$Id$
----------------
WRITING SCHEDULE
----------------


0. Preface 90%

1. Introduction 75%

------------------------------------------

PART I: Basics 

Part Intro

2. Programming
   + more exercises
   + checking for coverage
   + summary

3. Words
   + lexical resources
   + sentence tokenization?
   + morphological analysis
   + Multiword expressions
   + summary

4. Tagging
   + non-Latin tagging example
   + n-gram language modeling, smoothing
   + move Brill stuff elsewhere
   + summary

5. Chunk Parsing
   + [P] rule format
   + summary

------------------------------------------

PART II: Parsing

Part Intro 

6. Advanced Programming 50% 
   + XML
   + collocations?
   + simple extractive summarization?

7. Grammars and Parsing 90% [Ewan, Steven]
   + complete discussion of problems with parsing algorithms
   + material on dependencies, dependency grammar (+simple parser?)
   + discussion of generation

8. Chart Parsing 75% [Ewan]

9. Feature-based Grammars [Ewan]
   + Describe feature structure module (done; but what about featurelite?)
   + Categorial grammar?

10. Probabilistic Grammars and Parsing 25% [Steven]

------------------------------------------

PART III: Advanced Topics 

Part Intro

11. Software design
    + Unicode, character encoding, XML, web (urlopen), crawling?

12. Semantics
    + feature-based semantics (requires update of parser)
    + theta roles, propbank
    + Cooper storage (requires list-valued features)

13. Managing linguistic data [Steven]
    + OLAC, language identification, spearman rank correlation, annotation

14. Lexicon and Morphology
     + representing lexical information, redundancy
     + lexical resources
       + comlex
       + framenet
     + lexical semantics, use of ontologies
     + morphology/lexicon interaction
     + grammar/lexicon interaction (Levin classes)
     + lexical rules, hierarchical lexicon
     + multiword expressions, collocations, idioms
     --> AT&T WFST toolkit; Python bindings?

15. Data-intensive NLP 
    + language modelling (already some major components here, esp for
       estimation)
    + HMMs
    + other machine learning techniques (e.g., Transformation-based learning)
    + Naive Bayes classification, clustering
       [NER, text classification (& question classification), ontology extraction]
    + NLP on the Web 
       [stuff on RDF?]

16. Conclusion 
    brief pointers on 'hot topics': MT, Spoken Dialogue, QA
-------------------------------------------

APPENDIXES:

* Regular Expressions
* Cheat Sheet
