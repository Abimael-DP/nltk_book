.. -*- mode: rst -*-
.. include:: ../definitions.txt

======================
Feature Based Grammar
======================

--------------
 Introduction
--------------



--------------------
 Problems with CFGs
--------------------


Agreement
---------

Consider the following contrasts:

.. _this:
.. ex::
   .. ex::
      this chicken
   .. ex::
      \*these chicken

.. _these:
.. ex::
   .. ex::
      these chickens
   .. ex::
      \*this chicken

In English, nouns are usually morphologically marked as being singular
or plural. The form of the demonstrative modifier also varies in a
similar way; there is a singular form `this`:lx: and a plural form `these`:lx:.
Examples this_ and these_ show that there are constraints on
the realization of demonstratives and nouns within a noun phrase:
either both are singular or both are plural. A similar kind
of constraint is observed with subjects and predicates:

.. _subjpredsg:
.. ex::
   .. ex::
      the chicken runs
   .. ex::
      \*the chicken run

.. _subjpredpl:
.. ex::
   .. ex::
      the chickens run
   .. ex::
      \*the chickens runs


Here again, we can see that formal properties of the verb co-vary
with formal properties of the subject noun phrase; this co-variance is
usually termed `agreement`:dt: The element which determines the
agreement, here the subject noun phrase, is called the agreement
`controller`:dt:, while the element whose form is determined by
agreement, here the verb, is called the `target`:dt:.
If we look further at verb agreement in English, we will see that
present tense verbs typically have two inflected forms: one for third person
singular, and another for every other combination of person and
number:

.. ex::
 +--------+--------+--------+
 |        |singular|plural  |
 +--------+--------+--------+
 |1       |run     |run     |
 +--------+--------+--------+
 |2       |run     |run     |
 +--------+--------+--------+
 |3       |runs    |run     |
 +--------+--------+--------+

We can make the role of morphological properties a bit more explicit as
illustrated in runs_ and run_. These representations indicate that the verb agrees with its
subject in person and number.

.. _runs:
.. ex::

 +----------+----------+----------+
 |the       |chick     |run-s     |
 +----------+----------+----------+
 |          |chick.3.SG|run-3.SG  |
 +----------+----------+----------+


.. _run:
.. ex::

 +------------+------------+------------+
 |the         |chick-s     |run         |
 +------------+------------+------------+
 |            |chick-3.PL  |run.3.PL    |
 +------------+------------+------------+


Despite the undoubted interest of agreement as a topic in its own
right, we have introduced it here for another reason: we want to look
at what happens when  we try encode agreement constraints in a context-free grammar. 
Suppose we take as our starting point the very simple CFG in agcfg0_.

.. _agcfg0:
.. ex::
   .. parsed-literal::

     `S`:gc: |rarr| `NP VP`:gc:
     `NP`:gc: |rarr| `Det N`:gc: 
     `VP`:gc: |rarr| `V`:gc: 

     `Det`:gc: |rarr| 'this'
     `N`:gc: |rarr| 'chick'
     `V`:gc: |rarr| 'runs'

agcfg0_ allows us to generate the sentence `this chick runs`:lx:;
however, what we really want to do is also generate `these chicks
run`:lx: while blocking unwanted strings such as `*this chicks run`:lx:
and `*these chick runs`:lx:. The most straightforward approach is to
add new non-terminals and productions to the grammar which reflect our
number distinctions and agreement constraints (we ignore person for the time being):

.. _agcfg1:
.. ex::
   .. parsed-literal::

     `S_SG`:gc: |rarr| `NP_SG VP_SG`:gc:
     `S_PL`:gc: |rarr| `NP_PL VP_PL`:gc:
     `NP_SG`:gc: |rarr| `Det_SG N_SG`:gc: 
     `NP_PL`:gc: |rarr| `Det_PL N_PL`:gc: 
     `VP_SG`:gc: |rarr| `V_SG`:gc: 
     `VP_PL`:gc: |rarr| `V_PL`:gc: 

     `Det_SG`:gc: |rarr| 'this'
     `Det_PL`:gc: |rarr| 'these'
     `N_SG`:gc: |rarr| 'chick'
     `N_PL`:gc: |rarr| 'chicks'
     `V_SG`:gc: |rarr| 'runs'
     `V_PL`:gc: |rarr| 'run'

It should be clear that this grammar will do the required
task, but only at the cost of duplicating our previous set of
rules. Rule multiplication is of course more severe if we add in
person agreement constraints.

Exercises
---------

#. Augment agcfg1_ so that it will generate strings like `I am
   happy`:lx: and `she is happy`:lx: but not `*you is happy`:lx: or
   `*they am happy`:lx:.

#. Augment agcfg1_ so that it will correctly describe the following
   Spanish noun phrases:

   .. ex::
      .. ex::

	 +---------------------+--------------------+--------------------+
	 |un                   |cuadro              |hermos-o            |
	 +---------------------+--------------------+--------------------+
	 |INDEF.SG.MASC        |picture             |beautiful-SG.MASC   |
	 +---------------------+--------------------+--------------------+
	 |'a beautiful picture'                     |                    |
	 +------------------------------------------+--------------------+

      .. ex::

	 +---------------------+--------------------+--------------------+
	 |un-os                |cuadro-s            |hermos-os           |
	 +---------------------+--------------------+--------------------+
	 |INDEF-PL.MASC        |picture-PL          |beautiful-PL.MASC   |
	 +---------------------+--------------------+--------------------+
	 |'beautiful pictures'                      |                    |
	 +------------------------------------------+--------------------+

      .. ex::

	 +---------------------+--------------------+--------------------+
	 |un-a                 |cortina             |hermos-a            |
	 +---------------------+--------------------+--------------------+
	 |INDEF-SG.FEM         |curtain             |beautiful-SG.FEM    |
	 +---------------------+--------------------+--------------------+
	 |'a beautiful curtain'                     |                    |
	 +------------------------------------------+--------------------+

      .. ex::

	 +---------------------+--------------------+--------------------+
	 |un-as                |cortina-s           |hermos-as           |
	 +---------------------+--------------------+--------------------+
	 |INDEF-PL.FEM         |curtain-PL          |beautiful-SG.FEM    |
	 +---------------------+--------------------+--------------------+
	 |'beautiful curtains'                      |                    |
	 +------------------------------------------+--------------------+

.. In grammatical terms, we might say that both nouns and
   demonstratives have a property of `number`:gc: which can take the values singular or
   plural.

Subcategorization
-----------------

In the chapter `Parsing <parse.html>`__, we proposed to augment our
category labels in order to represent different subcategories of
verb. More specifically,
we introduced labels such as `Vitr`:gc: and `Vtr`:gc: for intransitive
and transitive verbs respectively.  This allowed us to write rules
like the following:

.. _subcatcfg0:
.. ex::
   .. parsed-literal::

      `VP`:gc:  |rarr| `V_itr`:gc:  
      `VP`:gc:  |rarr| `V_tr NP`:gc: 

Although it is tempting to think of `V_itr`:gc: and `V_tr`:gc: as two
kinds of `V`:gc:, this is unjustified: from a formal point of view,
`V_itr`:gc: has no closer relationship with `V_tr`:gc: than it does,
say, with `NP`:gc:. As it stands, `V_itr`:gc: and `V_tr`:gc: are
unanalyzable nonterminal symbols from a CFG. One unwelcome consequence
is that we do not seem able to say anything about the class of verbs
in general. For example, we cannot say something like "All lexical
items of category `V`:gc: can be marked for tense", since `bark`:lx:,
say, is an item of category `V_itr`:gc:, not `V`:gc:.


Of course, the distinctions in subcatcfg0_ will introduce a further
multiplication factor when combined with agreement constraints along the lines of
agcfg1_.  Assuming we draw distinctions for each grammatical person,
our two rules in subcatcfg0_ will explode into the twelve rules of
subcatcfg1_.

.. _subcatcfg1:
.. ex::
   .. parsed-literal::

      `VP_1_SG`:gc:  |rarr| `V_itr_1_SG`:gc:  
      `VP_2_SG`:gc:  |rarr| `V_itr_2_SG`:gc:  
      `VP_3_SG`:gc:  |rarr| `V_itr_3_SG`:gc:  
      `VP_1_PL`:gc:  |rarr| `V_itr_1_PL`:gc:  
      `VP_2_PL`:gc:  |rarr| `V_itr_2_PL`:gc:  
      `VP_3_PL`:gc:  |rarr| `V_itr_3_PL`:gc:

      `VP_1_SG`:gc:  |rarr| `V_tr_1_SG NP`:gc:  
      `VP_2_SG`:gc:  |rarr| `V_tr_2_SG NP`:gc:  
      `VP_3_SG`:gc:  |rarr| `V_tr_3_SG NP`:gc:  
      `VP_1_PL`:gc:  |rarr| `V_tr_1_PL NP`:gc:  
      `VP_2_PL`:gc:  |rarr| `V_tr_2_PL NP`:gc:  
      `VP_3_PL`:gc:  |rarr| `V_tr_3_PL NP`:gc:  



Within the field of phonology, a somewhat comparable challenge has
been to represent different classes of phoneme which
share some property. For example, we might want to say that `b`:lx:, `g`:lx:,
`d`:lx: and `m`:lx: all share the property of being voiced (i.e., their
pronunciation involves vibration of the vocal folds), while `b`:lx:, `p`:lx:
and `m`:lx: share the different property of having a labial point of
articulation (i.e., their pronunciation involves closure of the lips).
The proposed solution to this problem has been to represent phonemes
as bundles of phonological `features`:dt:. Oversimplifying rather
drastically, we might say, for instance that the feature
representations for `b`:lx:, `p`:lx:
and `m`:lx: are respectively as follows::

 [voice:  +
  labial: +
  oral:   +
  nasal:  -]

 [voice:  -
  labial: +
  oral:   +
  nasal:  -]

 [voice:  +
  labial: +
  oral:   -
  nasal:  +]



 

.. rule proliferation
   loss of generalizations

Case Government
---------------


-------------------------
 Features and Categories
-------------------------

.. brief history
   gpsg, hpsg, lfg

Deconstructing Grammatical Categories
-------------------------------------

.. attribute value pairs
   atomic values
   boolean values
   mention X-bar?

Capturing Constraints in Rules
------------------------------

.. using variables in rules


Unbounded Dependency Constructions
----------------------------------


--------------------------------
 Adding Compositional Semantics
--------------------------------

Overview
--------

The lambda calculus
-------------------

Compositionality
----------------

-----------------
 Further Reading
-----------------



---------
Exercises
---------

1. 


.. include:: footer.txt
