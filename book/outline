Outline of chapters

* Introduction

TECHNOLOGY-ORIENTED CHAPTERS

(Any background on statistics and learning to be provided
along the way.)


* Tagging [Ewan, mid-March]
  - regexps
  - stemming
  - tokenization
  - tagging (frequency-based),
    pos/sense/morphological tagging

* FSTs
  - depends on availability of external software

* Parsing [Steven, mid-March]
  - simple grammars
  - simple parsing algorithms
  - chart parsing

* Light Parsing [Steven]
  - chunking etc

* Chart Parsing

* Feature-Based Grammars [Ewan]
  - simple model (add features to existing simple grammars)
  - unification
  - LFG, HPSG (toy grammars to illustrate the essence of the approach)

* Lexicon
  - wordnet, semantic relationships
  - hierarchical lexicon?

* Classification [Edward, mid-March?]
  - word-sense disambiguation
  - named-entity detection
  - coreference annotation
  - document classification

* Semantics [Ewan]
  - GPSG-style approach using lambda-abstracts
  - HPSG-style approach using unification

* Generation
  - template-based (with some feature-based constraints on slots?)
  - competing realisation rules (and weighting?)

* Speech


APPLICATION-ORIENTED CHAPTERS

Some subset of:
* machine translation
* dialog systems
* document summarization
* information extraction, text retrieval
* question answering
* corpus analysis


-----------------------------------------------------------

SCHEMATIC OUTLINE OF CHAPTER STRUCTURE

X.1 introduction: motivation, background, history
    - why is this an interesting problem for CL?

X.2 linguistic overview (for non-linguist readers)
    - how have linguists addressed the problem?
    - what are the shortcomings of the non-computational approach?

X.3 computational model (gentle for linguistics ugrads)
    - what are some good data structures and algorithms?
    - just pick one or two approaches, not encyclopedic
    - NLTK demo - watch the execution of the algorithm
      (screen shots to show execution, side bars to say how
       to do it)

X.4 advanced topics (optional)
    - other approaches, evaluation, problems
    - challenges for particular languages / language families
    - research questions

X.5 implementation
    - how does NLTK do it?
    - simple problems and worked solutions
    - suggested projects (e.g. for your MSc students)

