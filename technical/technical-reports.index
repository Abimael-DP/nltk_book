(DELETE ME)

Technical Reports for the Natural Language Toolkit.

This file provides an index to toolkit's technical reports, including
their current status.  It also gives a brief summary of each report.
It may eventually be converted into a web page.

=========================================================================
Report                                      File            Status
-------------------------------------------------------------------------
Basic Representation Types                  reptypes.tex    In progress
Printing Objects                            printing.tex    Not started
Frequencies and Probabilities               prob.tex        Not started
Graphical Representations                   draw.tex        Not started
WordNet                                     wordnet.tex     Not started
Exception Semantics                         except.tex      Not started
=========================================================================


Basic Representation Types
~~~~~~~~~~~~~~~~~~~~~~~~~~
  The natural language toolkit allows students to manipulate a number
  of conceptual objects, such as words, sentences, and syntax trees.
  Before we can build a consistant framework for manipulating such
  objects, we must decide how they should be represented.  This
  technical report explains basic types used by the toolkit to
  represent a number of conceptual objects.  Furthermore, it attempts
  to justify why this set of basic types was chosen.

Exception Semantics
~~~~~~~~~~~~~~~~~~~
  When should exceptions be raised?  When shouldn't they be raised?
  What guarantees can we give?  What philosophies guide the design of
  exceptions for the toolkit?

Frequencies and Probabilities
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  What classes should be used to deal with frequency distributions and
  probability distributions?  Should external packages be used?  Etc.

Graphical Representations
~~~~~~~~~~~~~~~~~~~~~~~~~
  The ability to visaulize objects can help students learn about them.
  We therefore intend to implement draw() methods for most
  data-oriented classes.  These methods would construct and display
  graphical representations of the objects.  For example, Tree.draw()
  might draw the syntax tree; and FreqDist.draw() might draw a
  bar-graph depicting the frequency distribution.  Some objects might
  have multiple draw methods.  Open questions include: is it possible
  to design a single interface to the draw() method, or will different
  objects' draw methods take different parameters?  What are the best
  ways to display objects?  etc.

Printing Objects
~~~~~~~~~~~~~~~~
  One thing that guides peoples intuitions about what an object is is
  how it looks when it prints.  If two things look the same when you
  print them, then intuitively they should be the same.  I think this
  may have been a source of confusion in the first problem set, where
  TokenTypes look just like strings when you print them, so users will
  be tempted to do things like use ``=='' to test whether a TokenType
  is equal to a string.

WordNet
~~~~~~~
  An interface to the WordNet database should be available from the
  toolkit.  There is at least on off-the-shelf package that could be
  used.  This report will describe how WordNet support will be
  integrated into the toolkit.
